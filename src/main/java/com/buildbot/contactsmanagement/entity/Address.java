package com.buildbot.contactsmanagement.entity;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.RequiredArgsConstructor;
import lombok.Setter;

/**
 * This class represents an address associated with a contact.
 *
 * @Entity indicates that this class is a JPA entity and maps to a database table.
 */
@Setter
@Getter
@AllArgsConstructor
@RequiredArgsConstructor
@Entity
@Table(name = "address")
public class Address extends BaseEntity {

    /**
     * The unique identifier for the address (auto-generated by the database).
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "address_id")
    private Long addressId;

    /**
     * The street name of the address, with a maximum length of 100 characters.
     */
    @Size(max = 100)
    @Column(name = "street_name")
    private String streetName;

    /**
     * The city of the address, with a maximum length of 100 characters.
     */
    @Size(max = 100)
    @Column(name = "city")
    private String city;

    /**
     * The state of the address, with a maximum length of 100 characters.
     */
    @Size(max = 100)
    @Column(name = "state")
    private String state;

    /**
     * The zip code (or postal code) of the address, with a maximum length of 10 characters.
     */
    @Size(max = 10)
    @Column(name = "zip_code")
    private String pinCode;

    /**
     * The country of the address, with a maximum length of 100 characters.
     */
    @Size(max = 100)
    @Column(name = "country")
    private String country;

    /**
     * The contact associated with this address.
     *
     * @OneToOne defines a one-to-one relationship with the Contact entity.
     * @JoinColumn specifies the foreign key column that references the contactId in the Contact entity.
     * @CascadeType.ALL indicates that any operations performed on the Address entity should also be cascaded to the associated Contact entity.
     */
    @OneToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "contact_id", referencedColumnName = "contactId")
    private Contact contact;
}
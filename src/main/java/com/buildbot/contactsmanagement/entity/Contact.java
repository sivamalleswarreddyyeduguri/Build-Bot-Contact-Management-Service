package com.buildbot.contactsmanagement.entity;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.RequiredArgsConstructor;
import lombok.Setter;
import lombok.ToString;

/**
 * This class represents a contact in the system.
 *
 * @Entity indicates that this class is a JPA entity and maps to a database table.
 */
@Entity
@Setter
@Getter
@AllArgsConstructor
@RequiredArgsConstructor
@ToString
@Table(name = "contact")
public class Contact extends BaseEntity {

    /**
     * The unique identifier for the contact (auto-generated by the database).
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long contactId;

    /**
     * The first name of the contact, which is non-nullable and has a maximum length of 20 characters.
     */
    @Column(name = "first_name", nullable = false)
    @Size(max = 20)
    private String firstName;

    /**
     * The last name of the contact, which is non-nullable and has a maximum length of 20 characters.
     */
    @Column(name = "last_name")
    @Size(max = 20)
    private String lastName;

    /**
     * The email address of the contact, which is unique, non-nullable, and has a maximum length of 50 characters.
     */
    @Column(name = "email", unique = true, nullable = false)
    @Size(max = 50)
    private String email;

    /**
     * The phone number of the contact, which is unique, non-nullable, and has a maximum length of 15 characters.
     */
    @Column(name = "phone_no", unique = true, nullable = false)
    @Size(max = 15)
    private String phoneNo;

    /**
     * The address associated with the contact.
     *
     * @OneToOne defines a one-to-one relationship with the Address entity.
     * @mappedBy specifies the field in the Address entity that references this Contact entity.
     * @CascadeType.ALL indicates that any operations performed on the Contact entity should also be cascaded to the associated Address entity.
     * @FetchType.LAZY specifies that the Address entity will be fetched lazily when needed, improving performance.
     */
    @OneToOne(mappedBy = "contact", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
    private Address address;
}